// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation (Snapshot) Navigation renders 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Navigation
    dispatch={[Function]}
    match={
      Object {
        "params": Object {
          "id": "1234",
        },
      }
    }
    printTrips={Array []}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      }
    }
    trips={Array []}
    user={
      Object {
        "role": null,
      }
    }
  />,
  "nodes": Array [
    <Navigation
      dispatch={[Function]}
      match={
        Object {
          "params": Object {
            "id": "1234",
          },
        }
      }
      printTrips={Array []}
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
      storeSubscription={
        Subscription {
          "listeners": Object {
            "notify": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": null,
        }
      }
      trips={Array []}
      user={
        Object {
          "role": null,
        }
      }
    />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Connect(Navigation)
        match={
          Object {
            "params": Object {
              "id": "1234",
            },
          }
        }
        store={
          Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Connect {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "store": undefined,
          "storeSubscription": undefined,
        },
        "notifyNestedSubs": [Function],
        "props": Object {
          "match": Object {
            "params": Object {
              "id": "1234",
            },
          },
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
        },
        "propsMode": true,
        "refs": Object {},
        "renderCount": 0,
        "selector": Object {
          "error": null,
          "props": Object {
            "dispatch": [Function],
            "match": Object {
              "params": Object {
                "id": "1234",
              },
            },
            "printTrips": Array [],
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "trips": Array [],
            "user": Object {
              "role": null,
            },
          },
          "run": [Function],
          "shouldComponentUpdate": false,
        },
        "setWrappedInstance": [Function],
        "state": Object {},
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "subscription": Subscription {
          "listeners": Object {
            "notify": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": null,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
        "version": 2,
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Navigation
          dispatch={[Function]}
          match={
            Object {
              "params": Object {
                "id": "1234",
              },
            }
          }
          printTrips={Array []}
          store={
            Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            }
          }
          storeSubscription={
            Subscription {
              "listeners": Object {
                "notify": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": null,
            }
          }
          trips={Array []}
          user={
            Object {
              "role": null,
            }
          }
        />,
        "_debugID": 2,
        "_renderedOutput": <Navigation
          dispatch={[Function]}
          match={
            Object {
              "params": Object {
                "id": "1234",
              },
            }
          }
          printTrips={Array []}
          store={
            Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            }
          }
          storeSubscription={
            Subscription {
              "listeners": Object {
                "notify": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": null,
            }
          }
          trips={Array []}
          user={
            Object {
              "role": null,
            }
          }
        />,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Connect(Navigation)
    match={
      Object {
        "params": Object {
          "id": "1234",
        },
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  />,
}
`;
